apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  name: www-mc
spec: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: mc-web
  name: mc-web
  namespace: www-mc
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mc-web
      app: mc-web
  strategy: {}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mc-web
        app: mc-web
    spec:
      tolerations:
  # these tolerations are to have the daemonset runnable on control plane nodes
  # Rancher labels:
      - key: node-role.kubernetes.io/controlplane
        operator: Exists
        effect: NoSchedule
      - key: node-role.kubernetes.io/etcd
        operator: Exists
        effect: NoExecute
      affinity:
        # prefer to run on a master node
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
              - key: node-role.kubernetes.io/controlplane
                operator: Exists

      containers:
      - image: smichi/webs:tiny1.25.3-0.2
        name: nginx
        resources:
    # must be defined to ensure QoS type and HPA
          requests:
            cpu: 5m
            memory: 1Mi
---

apiVersion: v1
kind: Service
metadata:
  name: mc-web-service
  namespace: www-mc
spec:
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app.kubernetes.io/name: mc-web
    app: mc-web
  sessionAffinity: None
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    #    nginx.ingress.kubernetes.io/server-snippet: |
    #      proxy_ssl_verify off;
  name: mc-ingress
  namespace: www-mc
spec:
  ingressClassName: nginx
  rules:
  - host: www.your-server.com
    http:
      paths:
      - backend:
          service:
            name: mc-web-service
            port:
              number: 80
        path: /
        pathType: ImplementationSpecific
  tls:
  - hosts:
    - www.your-server.com
    secretName: www.your-server.com-tls

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: mc-hpa
  namespace: www-mc
spec:
  maxReplicas: 3
  metrics:
  - resource:
      name: cpu
      target:
        averageUtilization: 75
        type: Utilization
    type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: mc-web
---

# restrict access from ingress-nginx only
# restrict access to anything
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: network-policy
  namespace: www-mc
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - podSelector: {}
    - namespaceSelector:
        matchLabels:
          app.kubernetes.io/name: ingress-nginx
  egress:
